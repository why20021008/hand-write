[tool.poetry]
name = "hand-write"
version = "0.1.0"
description = "A handwriting generation application"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
license = "LICENSE"
packages = [{include = "hand_write"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
handright = "8.2.0"
pillow = "10.3.0"
PySide6 = "6.7.2"
PySide6-Addons = "6.7.2"
PySide6-Essentials = "6.7.2"
shiboken6 = "6.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
toml = "^0.10.2"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=hand_write",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=0",  # Set to 0 for initial setup, increase as you add code
]
testpaths = [
    "tests",
]
pythonpath = ["."]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Tests that take a long time to run",
]

[tool.coverage.run]
source = ["hand_write"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"